import os

#author: Tychele N. Turner, Ph.D.
#email: tycheleturner@gmail.com

if config == {}:
    configfile: "../config.json"

MITOBAM_DIR = config["mitobam_dir"]
MITO_REF = config["mito_ref"]
HETEROPLASMY_THRESHOLD = config["heteroplasmy_threshold"]

SAMPLES=[]
for file in os.listdir(MITOBAM_DIR):
    if file.endswith(".MT.clean.name.bam"):
        SAMPLES.append(str(file).split('.MT.clean.name.bam')[0])
print(SAMPLES)

rule all:
    input: expand("%s/{sample}.MT.clean.name.bam" % MITOBAM_DIR, sample = SAMPLES), expand("{sample}.pysamstats", sample = SAMPLES),  expand("{sample}.pysamstats.variants.txt", sample = SAMPLES),  expand("{sample}.pysamstats.heteroplasmy.txt", sample = SAMPLES)
    params: sge_opts="-l mfree=20G -N run_all" 

rule parse_pysamstats:
    input: "{sample}.pysamstats"
    output: "{sample}.pysamstats.variants.txt", "{sample}.pysamstats.heteroplasmy.txt"
    params: sge_opts="-l mfree=20G,h_rt=1:00:00 -N pileup_counts -cwd"
    shell: """
    module load hdf5/1.8.13
    module load netcdf/4.3.2    
    module load R/3.1.0
    Rscript parse_pysamstats.R -i {input} -o {output[0]} -v {output[1]} -t {HETEROPLASMY_THRESHOLD}
    """

rule pysamstats:
    input: "%s/{sample}.MT.clean.name.bam"%MITOBAM_DIR
    output: "{sample}.pysamstats"
    params: sge_opts="-l mfree=20G,h_rt=1:00:00 -N pysamstats -cwd"
    shell: """    
    
    module load python/2.7.3
    module load pysam/0.8.4
    module load pysamstats/0.24.2 
    pysamstats --fasta {MITO_REF} --type variation {input} > {output}
    """

rule mpileup:
    input: "%s/{sample}.MT.clean.name.bam" % MITOBAM_DIR
    output: "{sample}.mpileup"
    params: sge_opts="-l mfree=1G,h_rt=1:00:00 -N mpileup -cwd"
    shell: """
    module load samtools/0.1.19 && samtools mpileup -f {REFERENCE} {input} > {output}
    """

rule clean:
    shell: """
    rm *.pysamstats
    """
